version: '3.5'

services:

  redis:
    container_name: redis
    build: ../metagenscope-server/database_docker/redis
    ports:
      - 6380:6379
    healthcheck:
      test: exit 0

  rabbitmq:
    container_name: rabbitmq
    build: ../metagenscope-server/database_docker/rabbitmq
    ports:
      - 5673:5672
    environment:
      # These are not used in production so it is fine to commit them
      - RABBITMQ_DEFAULT_USER=metagenscope
      - RABBITMQ_DEFAULT_PASS=metagenscope
      - RABBITMQ_DEFAULT_VHOST=metagenscope
    healthcheck:
      test: exit 0

  mongo-db:
    container_name: mongo-db
    build: ../metagenscope-server/database_docker/mongo_db
    ports:
      - 27020:27017
    environment:
      # These are not used in production so it is fine to commit them
      - MONGO_INITDB_ROOT_USERNAME=mongodb
      - MONGO_INITDB_ROOT_PASSWORD=mongodb
      - MONGO_INITDB_DATABASE=metagenscope
    healthcheck:
      test: ["CMD", "bash", "/usr/local/bin/mongo-healthcheck"]
      interval: 1m
      timeout: 10s
      retries: 3

  metagenscope-db:
    container_name: metagenscope-db
    build: ../metagenscope-server/database_docker/postgres_db
    ports:
      - 5435:5432  # expose ports - HOST:CONTAINER
    environment:
      # These are not used in production so it is fine to commit them
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  metagenscope-worker:
    container_name: metagenscope-worker
    build:
      context: ../metagenscope-server
      dockerfile: Dockerfile-worker
    command: >-
      ./startup.sh
      metagenscope-db:5432
      mongo-db:27017
      redis:6379
      rabbitmq:5672
      --
      celery worker -A worker.celery --loglevel=info
    volumes:
      - '../metagenscope-server:/usr/src/app'
    environment:
      # These should match metagenscope-service
      - APP_SETTINGS=development
      - SECRET_KEY=my_precious
      - MONGODB_HOST=mongodb://mongodb:mongodb@mongo-db:27017/metagenscope?authSource=admin
      - MONGODB_TEST_HOST=mongodb://mongodb:mongodb@mongo-db:27017/metagenscope_test?authSource=admin
      - DATABASE_URL=postgres://postgres:postgres@metagenscope-db:5432/metagenscope_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@metagenscope-db:5432/metagenscope_test
      - CELERY_BROKER_URL=amqp://metagenscope:metagenscope@rabbitmq:5672/metagenscope
      - CELERY_RESULT_BACKEND=redis://redis:6379
    depends_on:
      - mongo-db
      - metagenscope-db
      - redis
      - rabbitmq
    links:
      - mongo-db
      - metagenscope-db
      - redis
      - rabbitmq

  metagenscope-service:
    container_name: metagenscope-service
    build: ../metagenscope-server
    command: >-
      ./startup.sh
      metagenscope-db:5432
      mongo-db:27017
      redis:6379
      rabbitmq:5672
      --
      python manage.py runserver -h 0.0.0.0
    volumes:
      - '../metagenscope-server:/usr/src/app'
    ports:
      - 5001:5000 # expose ports - HOST:CONTAINER
    environment:
      # These should match metagenscope-worker
      # Environment: development | testing | staging | production
      - APP_SETTINGS=development
      - SECRET_KEY=my_precious
      - MONGODB_HOST=mongodb://mongodb:mongodb@mongo-db:27017/metagenscope?authSource=admin
      - MONGODB_TEST_HOST=mongodb://mongodb:mongodb@mongo-db:27017/metagenscope_test?authSource=admin
      - DATABASE_URL=postgres://postgres:postgres@metagenscope-db:5432/metagenscope_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@metagenscope-db:5432/metagenscope_test
      - CELERY_BROKER_URL=amqp://metagenscope:metagenscope@rabbitmq:5672/metagenscope
      - CELERY_RESULT_BACKEND=redis://redis:6379
    depends_on:
      - mongo-db
      - metagenscope-db
      - redis
      - rabbitmq
    links:
      - mongo-db
      - metagenscope-db
      - redis
      - rabbitmq

  web-service:
    container_name: web-service
    build:
      context: ../metagenscope-client
      dockerfile: Dockerfile-local
    environment:
        - NODE_ENV=development
        - CHOKIDAR_USEPOLLING=true
        - REACT_APP_METAGENSCOPE_SERVICE_URL=${REACT_APP_METAGENSCOPE_SERVICE_URL}
    volumes:
      - '../metagenscope-client:/usr/src/app'
      - '/usr/src/app/node_modules'
      - '/usr/src/app/typings'
    ports:
      - '9000:9000' # expose ports - HOST:CONTAINER
    depends_on:
      - metagenscope-service

  nginx:
    container_name: nginx
    build:
      context: ./nginx/
      dockerfile: Dockerfile-local
    restart: always
    ports:
      - 80:80
    depends_on:
      - metagenscope-service
      - web-service
    links:
      - metagenscope-service
      - web-service
