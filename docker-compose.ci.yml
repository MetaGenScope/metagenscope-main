version: '2.1'

services:

  mongo-db:
    container_name: mongo-db
    image: metagenscope/mongo:ci
    ports:
      - 27020:27017
    environment:
      # These are not used in production so it is fine to commit them
      - MONGO_INITDB_ROOT_USERNAME=mongodb
      - MONGO_INITDB_ROOT_PASSWORD=mongodb
      - MONGO_INITDB_DATABASE=metagenscope
    healthcheck:
      test: ["CMD", "bash", "/usr/local/bin/mongo-healthcheck"]
      interval: 1m
      timeout: 10s
      retries: 3

  metagenscope-db:
    container_name: metagenscope-db
    image: metagenscope/metagenscope-db:ci
    ports:
      - 5435:5432  # expose ports - HOST:CONTAINER
    environment:
      # These are not used in production so it is fine to commit them
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  metagenscope-service:
    container_name: metagenscope-service
    image: metagenscope/metagenscope-service:ci
    command: gunicorn -b 0.0.0.0:5000 manage:app
    ports:
      - 5001:5000 # expose ports - HOST:CONTAINER
    environment:
      # Environment: development | testing | staging | production
      - APP_SETTINGS=production
      - SECRET_KEY=my_precious
      - MONGODB_HOST=mongodb://mongodb:mongodb@mongo-db:27017/metagenscope
      - MONGODB_TEST_HOST=mongodb://mongodb:mongodb@mongo-db:27017/metagenscope_test
      - DATABASE_URL=postgres://postgres:postgres@metagenscope-db:5432/metagenscope_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@metagenscope-db:5432/metagenscope_test
    depends_on:
      mongo-db:
        condition: service_healthy
      metagenscope-db:
        condition: service_healthy
    links:
      - mongo-db
      - metagenscope-db

  web-service:
    container_name: web-service
    image: metagenscope/metagenscope-client:ci
    ports:
      - '9000:9000' # expose ports - HOST:CONTAINER
    depends_on:
      metagenscope-service:
        condition: service_started

  nginx:
    container_name: nginx
    image: metagenscope/metagenscope-nginx:ci
    restart: always
    ports:
      - 80:80
    depends_on:
      metagenscope-service:
        condition: service_started
      web-service:
        condition: service_started
    links:
      - metagenscope-service
      - web-service

  e2e:
    container_name: e2e
    build:
      context: ./e2e/
      args:
        - TEST_URL=http://test.metagenscope.com
    # Run service indefinitely so we can test and then copy artifacts from the same instance
    entrypoint: tail -F -n0 /etc/hosts
    depends_on:
      nginx:
        condition: service_started
    links:
      - "nginx:test.metagenscope.com"
