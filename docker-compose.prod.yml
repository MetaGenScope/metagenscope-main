version: '3.5'

services:

  redis:
    container_name: redis
    image: metagenscope/redis:staging
    expose:
      - 6379
    healthcheck:
      test: exit 0
    networks:
      - private
    restart: always

  rabbitmq:
    container_name: rabbitmq
    image: metagenscope/rabbitmq:staging
    expose:
      - 5672
    environment:
      # Pull these from .env
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
      - RABBITMQ_DEFAULT_VHOST=metagenscope
    healthcheck:
      test: exit 0
    networks:
      - private
    restart: always

  mongo-db:
    container_name: mongo-db
    image: metagenscope/mongo:staging
    expose:
      - 27017
    volumes:
      - type: volume
        source: mongo-data
        target: /data/db
    environment:
      # Pull these from .env
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=metagenscope
    healthcheck:
      test: ["CMD", "bash", "/usr/local/bin/mongo-healthcheck"]
      interval: 1m
      timeout: 10s
      retries: 3
    networks:
      - private
    restart: always

  metagenscope-db:
    container_name: metagenscope-db
    image: metagenscope/metagenscope-db:staging
    expose:
      - 5432
    volumes:
      - type: volume
        source: postgresql-data
        target: /var/lib/postgresql/data
    environment:
      # Pull these from .env
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    healthcheck:
      test: exit 0
    networks:
      - private
    restart: always

  metagenscope-worker:
    container_name: metagenscope-worker
    image: metagenscope/metagenscope-worker:staging
    # No port exposure because worker communicates entirely via RabbitMQ
    command: >-
      ./startup.sh
      metagenscope-db:5432
      mongo-db:27017
      redis:6379
      rabbitmq:5672
      --
      celery worker -A worker.celery --loglevel=info
    environment:
      # These should match metagenscope-service
      - APP_SETTINGS=production
      - SECRET_KEY
      - MONGODB_HOST=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-db:27017/metagenscope?authSource=admin
      - MONGODB_TEST_HOST=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-db:27017/metagenscope_test?authSource=admin
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@metagenscope-db:5432/metagenscope_prod
      - DATABASE_TEST_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@metagenscope-db:5432/metagenscope_test
      - CELERY_BROKER_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/metagenscope
      - CELERY_RESULT_BACKEND=redis://redis:6379
    depends_on:
      - mongo-db
      - metagenscope-db
      - redis
      - rabbitmq
    networks:
      - public
      - private
    restart: always

  metagenscope-service:
    container_name: metagenscope-service
    image: metagenscope/metagenscope-service:staging
    command: >-
      ./startup.sh
      metagenscope-db:5432
      mongo-db:27017
      redis:6379
      rabbitmq:5672
      --
      gunicorn -b 0.0.0.0:5000 manage:app
    expose:
      - 5000
    environment:
      # These should match metagenscope-worker
      # Environment: development | testing | staging | production
      - APP_SETTINGS=production
      - SECRET_KEY
      - MONGODB_HOST=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-db:27017/metagenscope?authSource=admin
      - MONGODB_TEST_HOST=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-db:27017/metagenscope_test?authSource=admin
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@metagenscope-db:5432/metagenscope_prod
      - DATABASE_TEST_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@metagenscope-db:5432/metagenscope_test
      - CELERY_BROKER_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/metagenscope
      - CELERY_RESULT_BACKEND=redis://redis:6379
    depends_on:
      - mongo-db
      - metagenscope-db
      - redis
      - rabbitmq
    networks:
      - public
      - private
    restart: always

  web-service:
    container_name: web-service
    image: metagenscope/metagenscope-client:staging
    expose:
      - 9000
    depends_on:
      - metagenscope-service
    restart: always
    networks:
      - public

  nginx:
    container_name: nginx
    image: metagenscope/metagenscope-nginx:staging
    restart: always
    ports:
      # Nginx reverse proxy is the only public port exposure
      - '127.0.0.1:8080:8080'
    expose:
      - 8080
    depends_on:
      - metagenscope-service
      - web-service
    networks:
      - public
    restart: always

volumes:
  mongo-data:
  postgresql-data:

networks:
  public:
  private:
